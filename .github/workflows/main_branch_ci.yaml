name: "Main Branch CI/CD"

on:
  push:
    branches: [ main ]

jobs:

  lint_test_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]
    - name: Lint with flake8
      run: |
        flake8 phoenix tests
    - name: Test with pytest
      run: |
        pytest -v

  publish:
    runs-on: ubuntu-latest
    needs: [lint_test_build]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install databricks-cli wheel
    # uncomment this section if uploading the wheel to Databricks is desired and the host and token secrets have been set up
    # - name: Build and upload wheel to Databricks DEV environment
    #   env:
    #     DATABRICKS_HOST: ${{ secrets.DATABRICKS_QA_HOST }}
    #     DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_QA_TOKEN }}
    #   run: |
    #     python setup.py bdist_wheel
    #     dbfs cp --overwrite dist/*.whl dbfs:/FileStore/internal_library_wheels/phoenix/$(ls dist/)
    #     dbfs cp --overwrite dist/*.whl dbfs:/FileStore/internal_library_wheels/phoenix/ltk_phoenix-latest-py3-none-any.whl
